{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/budgetPlanner.js","js/controllers/budgetTracker.js","js/services/flightService.js","js/directives/inputRevealer.js","js/controllers/locations.js","js/models/locations.js","js/controllers/locationsForms.js","js/controllers/locationsShow.js","js/controllers/main.js","js/models/trips.js","js/services/tripService.js","js/models/users.js","js/controllers/usersEdit.js","js/services/userService.js","js/controllers/usersShow.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","$window","User","TripService","Trip","submit","signup","register","user","then","res","localStorage","setItem","data","token","payload","getPayload","_id","tripData","getTrip","save","console","log","go","id","this","LoginController","login","credentials","BudgetPlannerController","Location","FlightService","getFlights","budgetPlanner","newTrip","flightCost","tripDuration","parseFloat","duration","returnDate","moment","departDate","add","format","createTrip","totalCost","expenses","accomCost","totalSavings","location","loggedIn","isLoggedIn","getItem","saveTrip","alert","isAuthenticated","get","params","origin","destination","closestAirport","destAirportCode","airportCode","BudgetTrackerController","calcPcSaved","budgetTracker","pcSaved","trip","Math","ceil","$update","$http","getPrice","method","response","inputRevealer","restrict","replace","scope","type","name","ngModel","onSubmit","link","$scope","element","on","isEditing","$apply","e","keyCode","LocationsIndexController","locationsIndex","all","query","$resource","update","LocationsNewController","createLocation","locationsNew","images","tempImage","one","two","three","LocationsEditController","locationsEdit","LocationsShowController","locationsShow","MainController","UserService","logout","removeItem","deleteTrip","main","userId","JSON","stringify","parse","UsersEditController","usersEdit","saveUser","userData","getUser","UsersShowController","usersShow","trips","angular","module","config","$inject","service","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer','ngMaterial'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('locationsNew', {\n      url: '/locations/new',\n      templateUrl: '/templates/locationsNew.html',\n      controller: 'LocationsNewController as locationsNew'\n    })\n    .state('locationsEdit', {\n      url: '/locations/:id/edit',\n      templateUrl: '/templates/locationsEdit.html',\n      controller: 'LocationsEditController as locationsEdit'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'LocationsIndexController as locationsIndex'\n    })\n    .state('locationsShow', {\n      url: '/locations/:id',\n      templateUrl: '/templates/locationsShow.html',\n      controller: 'LocationsShowController as locationsShow'\n    })\n    .state('budgetPlanner', {\n      url: '/locations/:id/budget',\n      templateUrl: '/templates/budgetPlanner.html',\n      controller: 'BudgetPlannerController as budgetPlanner'\n    })\n    .state('budgetTracker', {\n      url: '/trips/:id',\n      templateUrl: '/templates/budgetTracker.html',\n      controller: 'BudgetTrackerController as budgetTracker'\n    }) /////////user state\n    .state('usersShow', {\n      url: '/users/:id/show',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    });\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window', 'User','TripService','Trip'];\nfunction RegisterController($auth, $state, $window, User, TripService, Trip) {\n\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth\n      .signup(register.user)\n      .then((res) => {\n\n        $window.localStorage.setItem('token', res.data.token);\n        const payload = $auth.getPayload();\n        $window.localStorage.setItem('userId', payload._id);\n\n        const tripData = TripService.getTrip();\n\n        if (tripData) {\n          tripData.user = res.data.user._id;\n          Trip.save(tripData, (res) => {\n            console.log('saved trip! ', res);\n          });\n          return $state.go('usersShow', { id: res.data.user._id });\n        }\n\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state', '$window','TripService', 'Trip'];\nfunction LoginController($auth, $state, $window, TripService, Trip) {\n\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth\n      .login(login.credentials)\n      .then((data) => {\n        const payload = $auth.getPayload();\n        $window.localStorage.setItem('userId', payload._id);\n\n        const tripData = TripService.getTrip();\n\n        if (tripData) {\n          tripData.user = data.data.user._id;\n          Trip.save(tripData, (res) => {\n            console.log('saved trip! ', res);\n          });\n          return $state.go('usersShow', { id: data.data.user._id });\n        }\n\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .controller('BudgetPlannerController', BudgetPlannerController);\n\nBudgetPlannerController.$inject= ['Location','Trip','$state', 'FlightService', '$auth', 'TripService', '$window'];\nfunction BudgetPlannerController(Location, Trip, $state, FlightService, $auth, TripService, $window) {\n  const budgetPlanner = this;\n\n  budgetPlanner.isLoggedIn = $auth.isAuthenticated;\n  budgetPlanner.newTrip = {};\n  budgetPlanner.location = Location.get($state.params);\n\n  Location.get($state.params, (location) => {\n    budgetPlanner.newTrip = {\n      origin: 'LGW',\n      destination: location.closestAirport,\n      destAirportCode: location.airportCode,\n      duration: 7,\n      flightCost: 0,\n      accomCost: 0,\n      expenses: 0,\n      totalSavings: 0,\n      totalCost: 0\n    };\n  });\n\n\n  function getFlights() {\n\n    budgetPlanner.newTrip.flightCost = 500;\n\n    // add duration to start date to get end date\n    const tripDuration = parseFloat(budgetPlanner.newTrip.duration);\n\n    budgetPlanner.newTrip.returnDate = moment(budgetPlanner.newTrip.departDate).add(tripDuration, 'days').format('YYYY-MM-DD');\n    console.log(budgetPlanner.newTrip.returnDate);\n\n    // if no results, add 7 days to start date and end date\n\n    // FlightService\n    //   .getPrice(budgetPlanner.newTrip.origin, budgetPlanner.newTrip.destAirportCode, budgetPlanner.newTrip.departDate, budgetPlanner.newTrip.returnDate)\n    //   .then(\n    //     (successResponse) => {\n    //       console.log(successResponse);\n    //       if (successResponse.totalPrice === 0) {\n    //         console.log('no results found');\n    //\n    //         // Re-run search with different date if no flights found\n    //\n    //\n    //       // If flights found, update newTrip with price\n    //       } else {\n    //         console.log('flights found!');\n    //         console.log(successResponse);\n    //         budgetPlanner.newTrip.flightCost = successResponse.totalPrice;\n    //       }\n    //     },\n    //     errorResponse => {\n    //       console.log('Could not retrieve price:', errorResponse);\n    //     }\n    // );\n  }\n\n  function createTrip() {\n    // Calculate total cost\n    budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.newTrip.expenses + budgetPlanner.newTrip.accomCost - budgetPlanner.newTrip.totalSavings;\n\n    // Get the location id\n    console.log(budgetPlanner.location);\n    budgetPlanner.newTrip.location = budgetPlanner.location._id;\n\n    console.log(budgetPlanner.newTrip);\n\n    // Check if user is logged in\n    const loggedIn = budgetPlanner.isLoggedIn();\n\n    if (loggedIn) {\n      budgetPlanner.newTrip.user = $window.localStorage.getItem('userId');\n      Trip.save(budgetPlanner.newTrip, (data) => {\n        console.log('saved ', data);\n        $state.go('budgetTracker', { id: data._id });\n      });\n    } else {\n      // if user isn't logged in, add trip id to local storage\n      TripService.saveTrip(budgetPlanner.newTrip);\n\n      alert('You need to be signed in to save a trip');\n\n      // get them to sign in, then add reference to user id to trip (id from local storage)\n      $state.go('register');\n    }\n  }\n\n  budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.newTrip.expenses + budgetPlanner.newTrip.accomCost - budgetPlanner.newTrip.totalSavings;\n\n  budgetPlanner.createTrip = createTrip;\n  budgetPlanner.getFlights = getFlights;\n}\n","angular.module('travelApp')\n  .controller('BudgetTrackerController', BudgetTrackerController);\n\nBudgetTrackerController.$inject = ['Trip', '$state'];\n\nfunction BudgetTrackerController(Trip, $state) {\n  const budgetTracker = this;\n\n  budgetTracker.trip = Trip.get($state.params);\n  budgetTracker.pcSaved = (budgetTracker.trip.totalSavings / (budgetTracker.trip.flightCost + budgetTracker.trip.expenses + budgetTracker.trip.accomCost)) * 100;\n\n  function calcPcSaved() {\n\n    budgetTracker.pcSaved = (budgetTracker.trip.totalSavings / (budgetTracker.trip.flightCost + budgetTracker.trip.expenses + budgetTracker.trip.accomCost)) * 100;\n\n    return Math.ceil(budgetTracker.pcSaved);\n  }\n\n\n  function save() {\n    budgetTracker.trip.$update((data) => {\n      console.log('trip saved!', data);\n    });\n  }\n\n  budgetTracker.save = save;\n  budgetTracker.calcPcSaved = calcPcSaved;\n}\n","angular.module('travelApp')\n  .service('FlightService', FlightService);\n\nFlightService.$inject = ['$http'];\nfunction FlightService($http) {\n\n  function getPrice(origin, destination, departDate, returnDate) {\n\n    return $http({\n      method: 'GET',\n      url: '/flights',\n      params: {\n        origin,\n        destination,\n        departDate,\n        returnDate\n      }\n    }).then(function successCallback(response) {\n      return response.data;\n    }, function errorCallback(response) {\n      console.log(response);\n    });\n  }\n\n  this.getPrice = getPrice;\n}\n","angular.module('travelApp')\n  .directive('inputRevealer', inputRevealer);\n\nfunction inputRevealer() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/inputRevealer.html',\n    scope: {\n      type: '@',\n      name: '@',\n      ngModel: '=',\n      onSubmit: '&'\n    },\n    link: function($scope, element) {\n      element.on('click', () => {\n        if(!$scope.isEditing) {\n          $scope.isEditing = true;\n        }\n        $scope.$apply();\n      }).on('keyup', (e) => {\n        if(e.keyCode === 13) {\n          $scope.onSubmit();\n          $scope.isEditing = false;\n          $scope.$apply();\n        }\n      });\n    }\n  };\n}\n","angular.module('travelApp')\n  .controller('LocationsIndexController', LocationsIndexController);\n\nLocationsIndexController.$inject = ['Location'];\n\nfunction LocationsIndexController(Location) {\n  const locationsIndex = this;\n\n  locationsIndex.all = Location.query();\n  console.log(locationsIndex);\n}\n","angular.module('travelApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('LocationsEditController', LocationsEditController)\n  .controller('LocationsNewController', LocationsNewController);\n\n//////new\nLocationsNewController.$inject = ['Location', '$state'];\n\nfunction LocationsNewController(Location, $state) {\n  const locationsNew = this;\n  locationsNew.location = {};\n\n  function createLocation() {\n    locationsNew.location.images = [locationsNew.location.tempImage.one, locationsNew.location.tempImage.two, locationsNew.location.tempImage.three];\n    Location.save(locationsNew.location, () => {\n      $state.go('login');\n    });\n  }\n  locationsNew.createLocation = createLocation;\n}\n\n//edit\nLocationsEditController.$inject = ['Location', '$state'];\n\nfunction LocationsEditController(location, $state) {\n  const locationsEdit = this;\n  locationsEdit.location = location.get($state.params);\n\n  function update() {\n    location.update({ id: locationsEdit.location._id }, locationsEdit.location, () => {\n      $state.go('login', $state.params);\n\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .controller('LocationsShowController', LocationsShowController);\n\nLocationsShowController.$inject = ['Location', '$state'];\n\nfunction LocationsShowController(Location, $state) {\n  const locationsShow = this;\n\n  locationsShow.location = Location.get($state.params);\n  console.log(locationsShow.location);\n\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$window', 'TripService', 'UserService'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state, $window, TripService, UserService) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.userId = $window.localStorage.getItem('userId');\n  // UserService.getUser();\n  // console.log(UserService.getUser());\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        localStorage.removeItem('userId');\n        TripService.deleteTrip();\n        $state.go('login');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('travelApp')\n  .factory('Trip', Trip);\n\nTrip.$inject = ['$resource'];\nfunction Trip($resource) {\n  return new $resource('/trips/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .service('TripService', TripService);\n\nTripService.$inject = ['$window'];\nfunction TripService($window) {\n\n  function saveTrip(tripData) {\n    $window.localStorage.setItem('tripData', JSON.stringify(tripData));\n  }\n\n  function getTrip() {\n    return JSON.parse($window.localStorage.getItem('tripData'));\n  }\n\n  function deleteTrip() {\n    return $window.localStorage.removeItem('tripData');\n  }\n\n  this.saveTrip = saveTrip;\n  this.getTrip = getTrip;\n  this.deleteTrip = deleteTrip;\n}\n","angular.module('travelApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('UsersEditController', UsersEditController);\n\nUsersEditController.$inject = ['User', '$state'];\n\nfunction UsersEditController(user, $state) {\n  const usersEdit = this;\n  usersEdit.user = user.get($state.params);\n\n  function update() {\n    user.update({ id: usersEdit.user._id }, usersEdit.user, () => {\n      $state.go('home', $state.params);\n\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .service('UserService', UserService);\n\nUserService.$inject = ['$window'];\nfunction UserService($window) {\n\n  function saveUser(userData) {\n    $window.localStorage.setItem('userId', userData);\n  }\n\n  function getUser() {\n    return $window.localStorage.getItem('userId');\n  }\n\n  this.saveUser = saveUser;\n  this.getUser = getUser;\n}\n","angular.module('travelApp')\n  .controller('UsersShowController', UsersShowController);\n\nUsersShowController.$inject = ['User', '$state', 'Trip'];\n\nfunction UsersShowController(User, $state, Trip) {\n\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params, (user)=> {\n    //going to find all the trips from 1 user id\n    usersShow.trips = Trip.query({userId: user._id});\n  });\n\n\n\n  // console.log(userId);\n\n  // console.log(usersShow.user);\n\n}\n"]}