{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/budgetPlanner.js","js/services/flightService.js","js/models/locations.js","js/controllers/main.js","js/models/trips.js","js/services/tripService.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","console","log","login","credentials","BudgetPlannerController","Location","Trip","FlightService","TripService","getFlights","budgetPlanner","newTrip","departDate","budget","origin","destination","duration","flightCost","totalCost","getPrice","returnDate","successResponse","totalPrice","errorResponse","createTrip","expenses","accomCost","accom","totalSavings","save","isLoggedIn","$update","saveTrip","isAuthenticated","location","get","params","_id","$http","method","response","data","$resource","id","update","MainController","logout","main","$window","tripData","localStorage","setItem","JSON","stringify","getTrip","parse","getItem","deleteTrip","removeItem","angular","module","config","$inject","service","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAsBbH,MAAM,iBACLC,IAAK,wBACLC,YAAa,gCACbC,WAAY,6CAIhBJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GC/C9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,UAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPQ,QAAQC,IAAI,SACZX,EAAMY,MAAMA,EAAMC,aACfP,KAAK,WACJL,EAAOM,GAAG,UARhB,GAAMK,GAAQJ,IAEdI,GAAMC,eAUND,EAAMV,OAASA,EC/BjB,QAASY,yBAAwBC,EAAUC,EAAMf,EAAQgB,EAAejB,EAAOkB,GA6B7E,QAASC,KACPC,EAAcC,QAAQC,WAAaF,EAAcG,OAAOD,WACxDF,EAAcC,QAAQG,OAASJ,EAAcG,OAAOC,OACpDJ,EAAcC,QAAQI,YAAcL,EAAcG,OAAOE,YACzDL,EAAcC,QAAQK,SAAWN,EAAcG,OAAOG,SACtDN,EAAcG,OAAOI,WAAaP,EAAcC,QAAQM,WACxDP,EAAcG,OAAOK,UAAYR,EAAcC,QAAQM,WACvDP,EAAcC,QAAQO,UAAYR,EAAcC,QAAQM,WAGxDV,EACGY,SAAST,EAAcC,QAAQG,OAAQJ,EAAcC,QAAQI,YAAaL,EAAcC,QAAQC,WAAYF,EAAcC,QAAQS,YAClIxB,KACC,SAAAyB,GACEX,EAAcC,QAAQM,WAAaI,EAAgBC,YAErD,SAAAC,GACEvB,QAAQC,IAAI,4BAA6BsB,KAQjD,QAASC,KACPd,EAAcC,QAAQC,WAAaF,EAAcG,OAAOD,WACxDF,EAAcC,QAAQG,OAASJ,EAAcG,OAAOC,OACpDJ,EAAcC,QAAQI,YAAcL,EAAcG,OAAOE,YACzDL,EAAcC,QAAQK,SAAWN,EAAcG,OAAOG,SACtDN,EAAcC,QAAQM,WAAaP,EAAcG,OAAOI,WACxDP,EAAcC,QAAQc,SAAWf,EAAcG,OAAOY,SACtDf,EAAcC,QAAQe,UAAYhB,EAAcG,OAAOc,MACvDjB,EAAcC,QAAQiB,aAAelB,EAAcG,OAAOe,aAE1DlB,EAAcC,QAAQO,UAAYR,EAAcC,QAAQM,WAAcP,EAAcG,OAAOY,SAAWf,EAAcG,OAAOG,SAAYN,EAAcG,OAAOc,MAAQjB,EAAcG,OAAOe,aAEzLtB,EAAKuB,KAAKnB,EAAcC,QAAS,WAC/BX,QAAQC,IAAI,UAERS,EAAcoB,WAEhBpB,EAAcC,QAAQoB,QAAQ,WAC5B/B,QAAQC,IAAIS,EAAcC,WAI5BH,EAAYwB,SAAStB,EAAcC,WAIvCX,QAAQC,IAAIS,EAAcC,SA/E5B,GAAMD,GAAgBZ,IAEtBY,GAAcoB,WAAaxC,EAAM2C,gBAEjCvB,EAAcwB,SAAW7B,EAAS8B,IAAI5C,EAAO6C,QAC7C1B,EAAcG,UAEdH,EAAcC,SACZuB,SAAUxB,EAAcwB,SAASG,IACjCzB,WAAY,aACZQ,WAAY,aACZN,OAAQ,MACRC,YAAa,MACbC,SAAU,EACVU,UAAW,EACXD,SAAU,EACVG,aAAc,EACdV,UAAW,GAGbR,EAAcG,OAAOD,WAAaF,EAAcC,QAAQC,WACxDF,EAAcG,OAAOC,OAASJ,EAAcC,QAAQG,OACpDJ,EAAcG,OAAOE,YAAcL,EAAcC,QAAQI,YACzDL,EAAcG,OAAOG,SAAWN,EAAcC,QAAQK,SACtDN,EAAcG,OAAOa,UAAYhB,EAAcC,QAAQe,UACvDhB,EAAcG,OAAOY,SAAWf,EAAcC,QAAQc,SACtDf,EAAcG,OAAOe,aAAelB,EAAcC,QAAQiB,aA0D1DlB,EAAcG,OAAOK,UAAYR,EAAcC,QAAQM,WAAaP,EAAcG,OAAOY,SAAWf,EAAcG,OAAOc,MAEzHjB,EAAcc,WAAaA,EAC3Bd,EAAcD,WAAaA,ECxF7B,QAASF,eAAc+B,GAErB,QAASnB,GAASL,EAAQC,EAAaH,EAAYQ,GAEjD,MAAOkB,IACLC,OAAQ,MACR3D,IAAK,WACLwD,QACEtB,OAAAA,EACAC,YAAAA,EACAH,WAAAA,EACAQ,WAAAA,KAEDxB,KAAK,SAAyB4C,GAC/B,MAAOA,GAASC,MACf,SAAuBD,GACxBxC,QAAQC,IAAIuC,KAIhB1C,KAAKqB,SAAWA,ECpBlB,QAASd,UAASqC,GAChB,MAAO,IAAIA,GAAU,kBAAoBC,GAAI,SAC3CC,QAASL,OAAQ,SCCrB,QAASM,gBAAevD,EAAOC,GAK7B,QAASuD,KACPxD,EAAMwD,SACHlD,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMkD,GAAOjD,IAEbiD,GAAKjB,WAAaxC,EAAM2C,gBAuBxBc,EAAKD,OAASA,EC7BhB,QAASxC,MAAKoC,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCC,QAASL,OAAQ,SCFrB,QAAS/B,aAAYwC,GAEnB,QAAShB,GAASiB,GAChBD,EAAQE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,IAG1D,QAASK,KACP,MAAOF,MAAKG,MAAMP,EAAQE,aAAaM,QAAQ,aAGjD,QAASC,KACP,MAAOT,GAAQE,aAAaQ,WAAW,YAGzC5D,KAAKkC,SAAWA,EAChBlC,KAAKwD,QAAUA,EACfxD,KAAK2D,WAAaA,EPpBpBE,QACGC,OAAO,aAAc,aAAc,YAAa,eAChDC,OAAOrF,QACPqF,OAAO7E,MAEVR,OAAOsF,SAAW,iBAAkB,sBA2CpC9E,KAAK8E,SAAW,iBChDhBH,QAAQC,OAAO,aACZ9E,WAAW,qBAAsBO,oBACjCP,WAAW,kBAAmBiB,iBAGjCV,mBAAmByE,SAAW,QAAS,UAgBvC/D,gBAAgB+D,SAAW,QAAS,UCrBpCH,QAAQC,OAAO,aACZ9E,WAAW,0BAA2BsB,yBAEzCA,wBAAwB0D,SAAU,WAAW,OAAO,SAAU,gBAAiB,QAAS,eCHxFH,QAAQC,OAAO,aACZG,QAAQ,gBAAiBxD,eAE5BA,cAAcuD,SAAW,SCHzBH,QAAQC,OAAO,aACZI,QAAQ,WAAY3D,UAEvBA,SAASyD,SAAW,aCHpBH,QAAQC,OAAO,aACZ9E,WAAW,iBAAkB+D,gBAEhCA,eAAeiB,SAAW,QAAS,UCHnCH,QAAQC,OAAO,aACZI,QAAQ,OAAQ1D,MAEnBA,KAAKwD,SAAW,aCHhBH,QAAQC,OAAO,aACZG,QAAQ,cAAevD,aAE1BA,YAAYsD,SAAW","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    // .state('home', {\n    //   url: '/',\n    //   templateUrl: '/templates/home.html',\n    //   controller: 'HomeController as home'\n    // })\n    // .state('locationsShow', {\n    //   url: '/locations/:id',\n    //   templateUrl: '/templates/locationsShow.html',\n    //   controller: 'LocationsShowController as locationsShow'\n    // })\n    // .state('locationsNew', {\n    //   url: '/locations/new',\n    //   templateUrl: '/templates/locationsNew.html',\n    //   controller: 'LocationsNewController as locationsNew'\n    // })\n    // .state('locationsEdit', {\n    //   url: '/locations/:id/edit',\n    //   templateUrl: '/templates/locationsEdit.html',\n    //   controller: 'LocationsEditController as locationsEdit'\n    // })\n    .state('budgetPlanner', {\n      url: '/locations/:id/budget',\n      templateUrl: '/templates/budgetPlanner.html',\n      controller: 'BudgetPlannerController as budgetPlanner'\n    });\n\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n  // .controller('HomeController', HomeController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    console.log('login');\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .controller('BudgetPlannerController', BudgetPlannerController);\n\nBudgetPlannerController.$inject= ['Location','Trip','$state', 'FlightService', '$auth', 'TripService'];\nfunction BudgetPlannerController(Location, Trip, $state, FlightService, $auth, TripService) {\n  const budgetPlanner = this;\n\n  budgetPlanner.isLoggedIn = $auth.isAuthenticated;\n\n  budgetPlanner.location = Location.get($state.params);\n  budgetPlanner.budget = {};\n\n  budgetPlanner.newTrip = {\n    location: budgetPlanner.location._id,\n    departDate: '2017-01-01',\n    returnDate: '2017-01-20',\n    origin: 'LGW',\n    destination: 'LAX',\n    duration: 1,\n    accomCost: 0,\n    expenses: 0,\n    totalSavings: 0,\n    totalCost: 0\n  };\n\n  budgetPlanner.budget.departDate = budgetPlanner.newTrip.departDate;\n  budgetPlanner.budget.origin = budgetPlanner.newTrip.origin;\n  budgetPlanner.budget.destination = budgetPlanner.newTrip.destination;\n  budgetPlanner.budget.duration = budgetPlanner.newTrip.duration;\n  budgetPlanner.budget.accomCost = budgetPlanner.newTrip.accomCost;\n  budgetPlanner.budget.expenses = budgetPlanner.newTrip.expenses;\n  budgetPlanner.budget.totalSavings = budgetPlanner.newTrip.totalSavings;\n\n  function getFlights() {\n    budgetPlanner.newTrip.departDate = budgetPlanner.budget.departDate;\n    budgetPlanner.newTrip.origin = budgetPlanner.budget.origin;\n    budgetPlanner.newTrip.destination = budgetPlanner.budget.destination;\n    budgetPlanner.newTrip.duration = budgetPlanner.budget.duration;\n    budgetPlanner.budget.flightCost = budgetPlanner.newTrip.flightCost;\n    budgetPlanner.budget.totalCost = budgetPlanner.newTrip.flightCost;\n    budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost;\n\n\n    FlightService\n      .getPrice(budgetPlanner.newTrip.origin, budgetPlanner.newTrip.destination, budgetPlanner.newTrip.departDate, budgetPlanner.newTrip.returnDate)\n      .then(\n        successResponse => {\n          budgetPlanner.newTrip.flightCost = successResponse.totalPrice;\n        },\n        errorResponse => {\n          console.log('Could not retrieve price:', errorResponse);\n        }\n    );\n\n\n  }\n\n\n  function createTrip() {\n    budgetPlanner.newTrip.departDate = budgetPlanner.budget.departDate;\n    budgetPlanner.newTrip.origin = budgetPlanner.budget.origin;\n    budgetPlanner.newTrip.destination = budgetPlanner.budget.destination;\n    budgetPlanner.newTrip.duration = budgetPlanner.budget.duration;\n    budgetPlanner.newTrip.flightCost = budgetPlanner.budget.flightCost;\n    budgetPlanner.newTrip.expenses = budgetPlanner.budget.expenses;\n    budgetPlanner.newTrip.accomCost = budgetPlanner.budget.accom;\n    budgetPlanner.newTrip.totalSavings = budgetPlanner.budget.totalSavings;\n\n    budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + (budgetPlanner.budget.expenses * budgetPlanner.budget.duration) + budgetPlanner.budget.accom - budgetPlanner.budget.totalSavings;\n\n    Trip.save(budgetPlanner.newTrip, () => {\n      console.log('saved!');\n\n      if (budgetPlanner.isLoggedIn) {\n        // if user is logged in, add reference to user\n        budgetPlanner.newTrip.$update(() => {\n          console.log(budgetPlanner.newTrip);\n        });\n      } else {\n        // if user isn't logged in, add trip id to local storage, get them to sign in, then add reference to user id to trip (id from local storage)\n        TripService.saveTrip(budgetPlanner.newTrip);\n        // now go to login/register\n      }\n    });\n    console.log(budgetPlanner.newTrip);\n\n  }\n\n\n  budgetPlanner.budget.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.budget.expenses + budgetPlanner.budget.accom;\n\n  budgetPlanner.createTrip = createTrip;\n  budgetPlanner.getFlights = getFlights;\n\n  // console.log(budgetPlanner.budget);\n}\n","angular.module('travelApp')\n  .service('FlightService', FlightService);\n\nFlightService.$inject = ['$http'];\nfunction FlightService($http) {\n\n  function getPrice(origin, destination, departDate, returnDate) {\n\n    return $http({\n      method: 'GET',\n      url: '/flights',\n      params: {\n        origin,\n        destination,\n        departDate,\n        returnDate\n      }\n    }).then(function successCallback(response) {\n      return response.data;\n    }, function errorCallback(response) {\n      console.log(response);\n    });\n  }\n\n  this.getPrice = getPrice;\n}\n","angular.module('travelApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('travelApp')\n  .factory('Trip', Trip);\n\nTrip.$inject = ['$resource'];\nfunction Trip($resource) {\n  return new $resource('/trips/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .service('TripService', TripService);\n\nTripService.$inject = ['$window'];\nfunction TripService($window) {\n\n  function saveTrip(tripData) {\n    $window.localStorage.setItem('tripData', JSON.stringify(tripData));\n  }\n\n  function getTrip() {\n    return JSON.parse($window.localStorage.getItem('tripData'));\n  }\n\n  function deleteTrip() {\n    return $window.localStorage.removeItem('tripData');\n  }\n\n  this.saveTrip = saveTrip;\n  this.getTrip = getTrip;\n  this.deleteTrip = deleteTrip;\n}\n"]}