{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/locations.js","js/models/locations.js","js/controllers/locationsShow.js","js/controllers/main.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","LocationsIndexController","Location","locationsIndex","all","query","console","log","$resource","id","update","method","LocationsShowController","locationsShow","location","get","params","MainController","logout","main","isLoggedIn","isAuthenticated","angular","module","config","$inject","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,QACLC,IAAK,IACLC,YAAa,uBACbC,WAAY,+CAEbH,MAAM,iBACLC,IAAK,iBACLC,YAAa,gCACbC,WAAY,6CAmBhBJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GChD9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,eAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACfL,KAAK,WACJL,EAAOM,GAAG,eAPhB,GAAMG,GAAQF,IAEdE,GAAMC,eASND,EAAMR,OAASA,EC5BjB,QAASU,0BAAyBC,GAChC,GAAMC,GAAiBN,IAEvBM,GAAeC,IAAMF,EAASG,QAC9BC,QAAQC,IAAIJ,GCLd,QAASD,UAASM,GAChB,MAAO,IAAIA,GAAU,kBAAoBC,GAAI,SAC3CC,QAASC,OAAQ,SCDrB,QAASC,yBAAwBV,EAAUZ,GACzC,GAAMuB,GAAgBhB,IAEtBgB,GAAcC,SAAWZ,EAASa,IAAIzB,EAAO0B,QAC7CV,QAAQC,IAAIM,EAAcC,UCF5B,QAASG,gBAAe5B,EAAOC,GAK7B,QAAS4B,KACP7B,EAAM6B,SACHvB,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMuB,GAAOtB,IAEbsB,GAAKC,WAAa/B,EAAMgC,gBAuBxBF,EAAKD,OAASA,ELjChBI,QACGC,OAAO,aAAc,aAAc,YAAa,eAChDC,OAAOjD,QACPiD,OAAOzC,MAEVR,OAAOkD,SAAW,iBAAkB,sBA2CpC1C,KAAK0C,SAAW,iBChDhBH,QAAQC,OAAO,aACZ1C,WAAW,qBAAsBO,oBACjCP,WAAW,kBAAmBiB,iBAEjCV,mBAAmBqC,SAAW,QAAS,UAgBvC3B,gBAAgB2B,SAAW,QAAS,UCpBpCH,QAAQC,OAAO,aACZ1C,WAAW,2BAA4BoB,0BAE1CA,yBAAyBwB,SAAW,YCHpCH,QAAQC,OAAO,aACZG,QAAQ,WAAYxB,UAEvBA,SAASuB,SAAW,aCHpBH,QAAQC,OAAO,aACZ1C,WAAW,0BAA2B+B,yBAEzCA,wBAAwBa,SAAW,WAAY,UCH/CH,QAAQC,OAAO,aACZ1C,WAAW,iBAAkBoC,gBAEhCA,eAAeQ,SAAW,QAAS","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'LocationsIndexController as locationsIndex'\n    })\n    .state('locationsShow', {\n      url: '/locations/:id',\n      templateUrl: '/templates/locationsShow.html',\n      controller: 'LocationsShowController as locationsShow'\n    });\n    // .state('locationsNew', {\n    //   url: '/locations/new',\n    //   templateUrl: '/templates/locationsNew.html',\n    //   controller: 'LocationsNewController as locationsNew'\n    // })\n    // .state('locationsEdit', {\n    //   url: '/locations/:id/edit',\n    //   templateUrl: '/templates/locationsEdit.html',\n    //   controller: 'LocationsEditController as locationsEdit'\n    // })\n    // .state('budgetPlanner', {\n    //   url: '/locations/:id/budget',\n    //   templateUrl: '/templates/budgetPlanner.html',\n    //   controller: 'BudgetPlannerController as budgetPlanner'\n    // });\n\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('locations');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('locations');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .controller('LocationsIndexController', LocationsIndexController);\n\nLocationsIndexController.$inject = ['Location'];\n\nfunction LocationsIndexController(Location) {\n  const locationsIndex = this;\n\n  locationsIndex.all = Location.query();\n  console.log(locationsIndex);\n}\n","angular.module('travelApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('LocationsShowController', LocationsShowController);\n\nLocationsShowController.$inject = ['Location', '$state'];\n\nfunction LocationsShowController(Location, $state) {\n  const locationsShow = this;\n\n  locationsShow.location = Location.get($state.params);\n  console.log(locationsShow.location);\n\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n"]}