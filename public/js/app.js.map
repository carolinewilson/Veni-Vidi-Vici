{"version":3,"sources":["js/app.js","js/controllers/adventurersShow.js","js/controllers/auth.js","js/controllers/budgetPlanner.js","js/controllers/budgetTracker.js","js/directives/dragDrop.js","js/services/flightService.js","js/directives/inputRevealer.js","js/controllers/locations.js","js/models/locations.js","js/controllers/locationsForms.js","js/controllers/locationsShow.js","js/controllers/main.js","js/controllers/profileEdit.js","js/controllers/profileShow.js","js/models/trips.js","js/services/tripService.js","js/controllers/upload.js","js/models/users.js","js/services/userService.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","AdventurersShowController","User","$state","Location","adventurersShow","this","user","get","params","locations","query","_id","RegisterController","$auth","$window","TripService","Trip","submit","signup","register","then","res","localStorage","setItem","data","token","payload","getPayload","tripData","getTrip","save","console","log","go","id","LoginController","login","credentials","BudgetPlannerController","FlightService","$scope","updateChart","budgetPlanner","labels","newTrip","flightCost","accomCost","expenses","getFlights","tripDuration","parseFloat","duration","returnDate","moment","departDate","add","format","createTrip","totalCost","totalSavings","location","loggedIn","isLoggedIn","getItem","saveTrip","alert","isAuthenticated","origin","destination","closestAirport","destAirportCode","airportCode","$watchGroup","BudgetTrackerController","calcPcSaved","budgetTracker","pcSaved","trip","Math","ceil","$update","dragDrop","reader","FileReader","restrict","replace","scope","base64","link","element","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","$http","getPrice","method","response","inputRevealer","type","name","ngModel","onSubmit","isEditing","keyCode","LocationsIndexController","locationsIndex","all","$resource","update","LocationsNewController","createLocation","locationsNew","images","tempImage","one","two","three","four","five","currentUser","LocationsEditController","locationsEdit","LocationsShowController","locationsShow","MainController","UserService","logout","removeItem","deleteTrip","main","userId","ProfileEditController","profileEdit","profile","ProfileShowController","profileShow","trips","JSON","stringify","parse","UploadController","upload","saveUser","userData","getUser","angular","module","config","$inject","directive","service","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer','ngMaterial','chart.js'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('locationsNew', {\n      url: '/locations/new',\n      templateUrl: '/templates/locationsNew.html',\n      controller: 'LocationsNewController as locationsNew'\n    })\n    .state('locationsEdit', {\n      url: '/locations/:id/edit',\n      templateUrl: '/templates/locationsEdit.html',\n      controller: 'LocationsEditController as locationsEdit'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'LocationsIndexController as locationsIndex'\n    })\n    .state('locationsShow', {\n      url: '/locations/:id',\n      templateUrl: '/templates/locationsShow.html',\n      controller: 'LocationsShowController as locationsShow'\n    })\n    .state('budgetPlanner', {\n      url: '/locations/:id/budget',\n      templateUrl: '/templates/budgetPlanner.html',\n      controller: 'BudgetPlannerController as budgetPlanner'\n    })\n    .state('budgetTracker', {\n      url: '/trips/:id',\n      templateUrl: '/templates/budgetTracker.html',\n      controller: 'BudgetTrackerController as budgetTracker'\n    }) /////////user state\n    .state('profileShow', {\n      url: '/me',\n      templateUrl: '/templates/profileShow.html',\n      controller: 'ProfileShowController as profileShow'\n    })\n    .state('adventurersShow', {\n      url: '/adventurer/:id',\n      templateUrl: '/templates/adventurersShow.html',\n      controller: 'AdventurersShowController as adventurersShow'\n    })\n    .state('profileEdit', {\n      url: '/me/:id/edit',\n      templateUrl: '/templates/profileEdit.html',\n      controller: 'ProfileEditController as profileEdit'\n    });\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('travelApp')\n  .controller('AdventurersShowController', AdventurersShowController);\n\nAdventurersShowController.$inject = ['User', '$state', 'Location'];\nfunction AdventurersShowController(User, $state, Location) {\n  const adventurersShow = this;\n\n  adventurersShow.user = User.get($state.params, (user)=> {\n    // find all the locations with user id\n    adventurersShow.locations = Location.query({ user: user._id });\n  });\n\n}\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window', 'User','TripService','Trip'];\nfunction RegisterController($auth, $state, $window, User, TripService, Trip) {\n\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth\n      .signup(register.user)\n      .then((res) => {\n\n        $window.localStorage.setItem('token', res.data.token);\n        const payload = $auth.getPayload();\n        $window.localStorage.setItem('userId', payload._id);\n\n        const tripData = TripService.getTrip();\n\n        if (tripData) {\n          tripData.user = res.data.user._id;\n          Trip.save(tripData, (res) => {\n            console.log('saved trip! ', res);\n          });\n          return $state.go('usersShow', { id: res.data.user._id });\n        }\n\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state', '$window','TripService', 'Trip'];\nfunction LoginController($auth, $state, $window, TripService, Trip) {\n\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth\n      .login(login.credentials)\n      .then((data) => {\n        const payload = $auth.getPayload();\n        $window.localStorage.setItem('userId', payload._id);\n\n        const tripData = TripService.getTrip();\n\n        if (tripData) {\n          tripData.user = data.data.user._id;\n          Trip.save(tripData, (res) => {\n            console.log('saved trip! ', res);\n          });\n          return $state.go('usersShow', { id: data.data.user._id });\n        }\n\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .controller('BudgetPlannerController', BudgetPlannerController);\n\nBudgetPlannerController.$inject= ['Location','Trip','$state', 'FlightService', '$auth', 'TripService', '$window', '$scope'];\nfunction BudgetPlannerController(Location, Trip, $state, FlightService, $auth, TripService, $window, $scope) {\n  const budgetPlanner = this;\n\n  budgetPlanner.isLoggedIn = $auth.isAuthenticated;\n  budgetPlanner.newTrip = {};\n  budgetPlanner.location = Location.get($state.params);\n\n  Location.get($state.params, (location) => {\n    budgetPlanner.newTrip = {\n      origin: 'LGW',\n      destination: location.closestAirport,\n      destAirportCode: location.airportCode,\n      duration: 7,\n      flightCost: 0,\n      accomCost: 0,\n      expenses: 0,\n      totalSavings: 0,\n      totalCost: 0\n    };\n  });\n  \n  // Update pie chart\n  $scope.$watchGroup([\n    () => budgetPlanner.newTrip.flightCost,\n    () => budgetPlanner.newTrip.accomCost,\n    () => budgetPlanner.newTrip.expenses\n  ], () => {\n    updateChart();\n  });\n\n  function updateChart() {\n\n    budgetPlanner.labels = ['Flights', 'Accomodation', 'Spending Money'];\n    budgetPlanner.data = [\n      budgetPlanner.newTrip.flightCost,\n      budgetPlanner.newTrip.accomCost,\n      budgetPlanner.newTrip.expenses\n    ];\n  }\n\n  function getFlights() {\n\n    budgetPlanner.newTrip.flightCost = 500;\n\n    // add duration to start date to get end date\n    const tripDuration = parseFloat(budgetPlanner.newTrip.duration);\n\n    budgetPlanner.newTrip.returnDate = moment(budgetPlanner.newTrip.departDate).add(tripDuration, 'days').format('YYYY-MM-DD');\n    console.log(budgetPlanner.newTrip.returnDate);\n\n    // if no results, add 7 days to start date and end date\n\n    // FlightService\n    //   .getPrice(budgetPlanner.newTrip.origin, budgetPlanner.newTrip.destAirportCode, budgetPlanner.newTrip.departDate, budgetPlanner.newTrip.returnDate)\n    //   .then(\n    //     (successResponse) => {\n    //       console.log(successResponse);\n    //       if (successResponse.totalPrice === 0) {\n    //         console.log('no results found');\n    //\n    //         // Re-run search with different date if no flights found\n    //\n    //\n    //       // If flights found, update newTrip with price\n    //       } else {\n    //         console.log('flights found!');\n    //         console.log(successResponse);\n    //         budgetPlanner.newTrip.flightCost = successResponse.totalPrice;\n    //       }\n    //     },\n    //     errorResponse => {\n    //       console.log('Could not retrieve price:', errorResponse);\n    //     }\n    // );\n\n  }\n\n  function createTrip() {\n\n    // Calculate total cost\n    budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.newTrip.expenses + budgetPlanner.newTrip.accomCost - budgetPlanner.newTrip.totalSavings;\n\n    // Get the location id\n    budgetPlanner.newTrip.location = budgetPlanner.location._id;\n\n    // Check if user is logged in\n    const loggedIn = budgetPlanner.isLoggedIn();\n\n    if (loggedIn) {\n      budgetPlanner.newTrip.user = $window.localStorage.getItem('userId');\n      Trip.save(budgetPlanner.newTrip, (data) => {\n        console.log('saved ', data);\n        $state.go('budgetTracker', { id: data._id });\n      });\n    } else {\n      // if user isn't logged in, add trip id to local storage\n      TripService.saveTrip(budgetPlanner.newTrip);\n\n      alert('You need to be signed in to save a trip');\n\n      // get them to sign in, then add reference to user id to trip (id from local storage)\n      $state.go('register');\n    }\n  }\n\n  budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.newTrip.expenses + budgetPlanner.newTrip.accomCost - budgetPlanner.newTrip.totalSavings;\n\n  budgetPlanner.createTrip = createTrip;\n  budgetPlanner.getFlights = getFlights;\n}\n","angular.module('travelApp')\n  .controller('BudgetTrackerController', BudgetTrackerController);\n\nBudgetTrackerController.$inject = ['Trip', '$state','$scope'];\n\nfunction BudgetTrackerController(Trip, $state, $scope) {\n  const budgetTracker = this;\n\n  budgetTracker.trip = Trip.get($state.params);\n  budgetTracker.pcSaved = (budgetTracker.trip.totalSavings / (budgetTracker.trip.flightCost + budgetTracker.trip.expenses + budgetTracker.trip.accomCost)) * 100;\n\n  function calcPcSaved() {\n\n    budgetTracker.pcSaved = (budgetTracker.trip.totalSavings / (budgetTracker.trip.flightCost + budgetTracker.trip.expenses + budgetTracker.trip.accomCost)) * 100;\n\n    return Math.ceil(budgetTracker.pcSaved);\n  }\n\n  // Update pie chart\n  $scope.$watchGroup([\n    () => budgetTracker.trip.flightCost,\n    () => budgetTracker.trip.accomCost,\n    () => budgetTracker.trip.expenses\n  ], () => {\n    updateChart();\n  });\n\n  function updateChart() {\n\n    budgetTracker.labels = ['Flights', 'Accomodation', 'Spending Money'];\n    budgetTracker.data = [\n      budgetTracker.trip.flightCost,\n      budgetTracker.trip.accomCost,\n      budgetTracker.trip.expenses\n    ];\n  }\n\n  function save() {\n    budgetTracker.trip.$update(() => {\n      calcPcSaved();\n    });\n  }\n\n  budgetTracker.save = save;\n  budgetTracker.calcPcSaved = calcPcSaved;\n}\n","angular.module('travelApp')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop(){\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element){\n\n      $scope.base64 = null;\n      $scope.active = false;\n      reader.onload = () =>{\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n\n\n      element\n        .on('dragover', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) =>{\n          e.preventDefault();\n          // console.log('drag');\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n        .on('drop', (e)=>{\n          e.preventDefault();\n          // console.log('dropped');\n          const file = (e.target.files || e.dataTransfer.files)[0];\n          // console.log(file);\n          reader.readAsDataURL(file);\n        });\n    }\n  };\n}\n","angular.module('travelApp')\n  .service('FlightService', FlightService);\n\nFlightService.$inject = ['$http'];\nfunction FlightService($http) {\n\n  function getPrice(origin, destination, departDate, returnDate) {\n\n    return $http({\n      method: 'GET',\n      url: '/flights',\n      params: {\n        origin,\n        destination,\n        departDate,\n        returnDate\n      }\n    }).then(function successCallback(response) {\n      return response.data;\n    }, function errorCallback(response) {\n      console.log(response);\n    });\n  }\n\n  this.getPrice = getPrice;\n}\n","angular.module('travelApp')\n  .directive('inputRevealer', inputRevealer);\n\nfunction inputRevealer() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/inputRevealer.html',\n    scope: {\n      type: '@',\n      name: '@',\n      ngModel: '=',\n      onSubmit: '&'\n    },\n    link: function($scope, element) {\n      element.on('click', () => {\n        if(!$scope.isEditing) {\n          $scope.isEditing = true;\n        }\n        $scope.$apply();\n      }).on('keyup', (e) => {\n        if(e.keyCode === 13) {\n          $scope.onSubmit();\n          $scope.isEditing = false;\n          $scope.$apply();\n        }\n      });\n    }\n  };\n}\n","angular.module('travelApp')\n  .controller('LocationsIndexController', LocationsIndexController);\n\nLocationsIndexController.$inject = ['Location'];\n\nfunction LocationsIndexController(Location) {\n  const locationsIndex = this;\n\n  locationsIndex.all = Location.query();\n  console.log(locationsIndex);\n}\n","angular.module('travelApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('LocationsEditController', LocationsEditController)\n  .controller('LocationsNewController', LocationsNewController);\n\n//////new\nLocationsNewController.$inject = ['Location', '$state', '$auth'];\n\nfunction LocationsNewController(Location, $state, $auth) {\n  const locationsNew = this;\n  const currentUser = $auth.getPayload()._id;\n  locationsNew.location = {};\n  locationsNew.location.user = currentUser;\n\n  function createLocation() {\n    locationsNew.location.images = [locationsNew.location.tempImage.one, locationsNew.location.tempImage.two, locationsNew.location.tempImage.three, locationsNew.location.tempImage.four, locationsNew.location.tempImage.five];\n    Location.save(locationsNew.location, () => {\n      $state.go('home');\n    });\n  }\n  locationsNew.createLocation = createLocation;\n}\n\n//edit\nLocationsEditController.$inject = ['Location', '$state'];\n\nfunction LocationsEditController(location, $state) {\n  const locationsEdit = this;\n  locationsEdit.location = location.get($state.params);\n\n  function update() {\n    location.update({ id: locationsEdit.location._id }, locationsEdit.location, () => {\n      $state.go('home', $state.params);\n\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .controller('LocationsShowController', LocationsShowController);\n\nLocationsShowController.$inject = ['Location', '$state', 'User'];\n\nfunction LocationsShowController(Location, $state, User) {\n  const locationsShow = this;\n\n  locationsShow.location = Location.get($state.params, (location) => {\n    locationsShow.user = User.query({ _id: location.user});\n  });\n\n\n\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$window', 'TripService', 'UserService'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state, $window, TripService, UserService) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.userId = $window.localStorage.getItem('userId');\n  // UserService.getUser();\n  // console.log(UserService.getUser());\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $window.localStorage.removeItem('userId');\n        // $auth.getPayload()._id\n        TripService.deleteTrip();\n        $state.go('login');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('travelApp')\n  .controller('ProfileEditController', ProfileEditController);\n\nProfileEditController.$inject = ['User', '$state'];\n\nfunction ProfileEditController(User, $state) {\n  const profileEdit = this;\n  profileEdit.profile = User.get($state.params);\n\n  function update() {\n    User.update({ id: profileEdit.profile._id }, profileEdit.profile, () => {\n      $state.go('profileShow', $state.params);\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .controller('ProfileShowController', ProfileShowController);\n\nProfileShowController.$inject = ['User', '$state', 'Trip', '$auth'];\n\nfunction ProfileShowController(User, $state, Trip, $auth) {\n\n  const profileShow = this;\n\n  const profile = $auth.getPayload();\n  console.log('-->', profile);\n  profileShow.profile = User.get({ id: profile._id }, (user)=> {\n    console.log(user);\n    //going to find all the trips from 1 user id\n    profileShow.trips = Trip.query({userId: user._id});\n  });\n\n\n\n  // console.log(profileId);\n\n  // console.log(profileShow.user);\n\n}\n","angular.module('travelApp')\n  .factory('Trip', Trip);\n\nTrip.$inject = ['$resource'];\nfunction Trip($resource) {\n  return new $resource('/trips/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .service('TripService', TripService);\n\nTripService.$inject = ['$window'];\nfunction TripService($window) {\n\n  function saveTrip(tripData) {\n    $window.localStorage.setItem('tripData', JSON.stringify(tripData));\n  }\n\n  function getTrip() {\n    return JSON.parse($window.localStorage.getItem('tripData'));\n  }\n\n  function deleteTrip() {\n    return $window.localStorage.removeItem('tripData');\n  }\n\n  this.saveTrip = saveTrip;\n  this.getTrip = getTrip;\n  this.deleteTrip = deleteTrip;\n}\n","angular.module('travelApp')\n  .controller('UploadController', UploadController);\n\nfunction UploadController(){\n  const upload = this;\n\n  upload.data = {};\n}\n","angular.module('travelApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .service('UserService', UserService);\n\nUserService.$inject = ['$window'];\nfunction UserService($window) {\n\n  function saveUser(userData) {\n    $window.localStorage.setItem('userId', userData);\n  }\n\n  function getUser() {\n    return $window.localStorage.getItem('userId');\n  }\n\n  this.saveUser = saveUser;\n  this.getUser = getUser;\n}\n"]}