{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/budgetPlanner.js","js/services/flightService.js","js/controllers/locations.js","js/models/locations.js","js/controllers/locationsForms.js","js/controllers/locationsShow.js","js/controllers/main.js","js/models/trips.js","js/services/tripService.js","js/models/users.js","js/controllers/usersEdit.js","js/controllers/usersShow.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","$window","User","submit","signup","register","user","then","res","localStorage","setItem","data","token","payload","getPayload","_id","console","log","go","this","LoginController","login","credentials","BudgetPlannerController","Location","Trip","FlightService","TripService","getFlights","endDate","moment","budgetPlanner","newTrip","departDate","add","format","createTrip","totalCost","flightCost","expenses","accomCost","totalSavings","location","loggedIn","isLoggedIn","$update","saveTrip","alert","isAuthenticated","get","params","returnDate","origin","destination","closestAirport","destAirportCode","airportCode","duration","$http","getPrice","method","response","LocationsIndexController","locationsIndex","all","query","$resource","id","update","LocationsNewController","createLocation","locationsNew","images","tempImage","one","two","three","save","LocationsEditController","locationsEdit","LocationsShowController","locationsShow","MainController","logout","removeItem","main","userId","getItem","tripData","JSON","stringify","getTrip","parse","deleteTrip","UsersEditController","usersEdit","UsersShowController","usersShow","angular","module","config","$inject","service","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('locationsNew', {\n      url: '/locations/new',\n      templateUrl: '/templates/locationsNew.html',\n      controller: 'LocationsNewController as locationsNew'\n    })\n    .state('locationsEdit', {\n      url: '/locations/:id/edit',\n      templateUrl: '/templates/locationsEdit.html',\n      controller: 'LocationsEditController as locationsEdit'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'LocationsIndexController as locationsIndex'\n    })\n    .state('locationsShow', {\n      url: '/locations/:id',\n      templateUrl: '/templates/locationsShow.html',\n      controller: 'LocationsShowController as locationsShow'\n    })\n    .state('budgetPlanner', {\n      url: '/locations/:id/budget',\n      templateUrl: '/templates/budgetPlanner.html',\n      controller: 'BudgetPlannerController as budgetPlanner'\n    }) /////////user state\n    .state('usersShow', {\n      url: '/users/:id/show',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    ;\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window', 'User'];\nfunction RegisterController($auth, $state, $window, User) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then((res) => {\n        $window.localStorage.setItem('token', res.data.token);\n        // const newUser = User.get({ id: $auth.getPayload()._id });\n        // console.log('user', newUser._id, newUser.username);\n        const payload = $auth.getPayload();\n        $window.localStorage.setItem('userId', payload._id);\n        console.log(User);\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state', '$window'];\nfunction LoginController($auth, $state, $window) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        const payload = $auth.getPayload();\n        $window.localStorage.setItem('userId', payload._id);\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .controller('BudgetPlannerController', BudgetPlannerController);\n\nBudgetPlannerController.$inject= ['Location','Trip','$state', 'FlightService', '$auth', 'TripService'];\nfunction BudgetPlannerController(Location, Trip, $state, FlightService, $auth, TripService) {\n  const budgetPlanner = this;\n\n  budgetPlanner.isLoggedIn = $auth.isAuthenticated;\n  budgetPlanner.newTrip = {};\n\n  Location.get($state.params, (location) => {\n    budgetPlanner.newTrip = {\n      departDate: moment('2017-01-01').format('MMM YYYY'),\n      returnDate: '2017-01-20',\n      origin: 'LGW',\n      destination: location.closestAirport,\n      destAirportCode: location.airportCode,\n      duration: 1,\n      flightCost: 0,\n      accomCost: 0,\n      expenses: 0,\n      totalSavings: 0,\n      totalCost: 0\n    };\n  });\n\n  function getFlights() {\n\n    // budgetPlanner.newTrip.flightCost = 500;\n    // console.log(budgetPlanner.newTrip.origin, budgetPlanner.newTrip.destAirportCode, budgetPlanner.newTrip.departDate, budgetPlanner.newTrip.returnDate);\n\n    // make sure start date is in format YYYY-MM-DD\n\n    // add duration to start date to get end date\n    const endDate = moment(budgetPlanner.newTrip.departDate).add(30, 'days').format('Do MMMM YYYY');\n    console.log(endDate);\n\n    // if no results, add 7 days to start date and end date\n\n\n\n    // FlightService\n    //   .getPrice(budgetPlanner.newTrip.origin, budgetPlanner.newTrip.destAirportCode, budgetPlanner.newTrip.departDate, budgetPlanner.newTrip.returnDate)\n    //   .then(\n    //     successResponse => {\n    //       if (successResponse.totalPrice === 0) {\n    //         console.log('no results found');\n    //\n    //         // Re-run search with different date if no flights found\n    //\n    //         FlightService\n    //           .getPrice(budgetPlanner.newTrip.origin, budgetPlanner.newTrip.destAirportCode, budgetPlanner.newTrip.departDate, budgetPlanner.newTrip.returnDate)\n    //           .then(successResponse => {\n    //\n    //           }, errorResponse => {\n    //\n    //           });\n    //\n    //       // If flights found, update newTrip with price\n    //       } else {\n    //         budgetPlanner.newTrip.flightCost = successResponse.totalPrice;\n    //       }\n    //     },\n    //     errorResponse => {\n    //       console.log('Could not retrieve price:', errorResponse);\n    //     }\n    // );\n  }\n\n  function createTrip() {\n    // Calculate total cost\n    budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.newTrip.expenses + budgetPlanner.newTrip.accomCost - budgetPlanner.newTrip.totalSavings;\n\n    // Get the location id\n    budgetPlanner.newTrip.location = budgetPlanner.location._id;\n\n    console.log(budgetPlanner.newTrip);\n\n    // Check if user is logged in\n    const loggedIn = budgetPlanner.isLoggedIn();\n    // Trip.save(budgetPlanner.newTrip, () => {\n    //   console.log('saved!');\n\n      if (loggedIn) {\n        console.log('Logged in!');\n        // if user is logged in, add reference to user\n        budgetPlanner.newTrip.$update(() => {\n          console.log(budgetPlanner.newTrip);\n        });\n      } else {\n        console.log('Logged out!');\n        // if user isn't logged in, add trip id to local storage, get them to sign in, then add reference to user id to trip (id from local storage)\n        TripService.saveTrip(budgetPlanner.newTrip);\n        // now go to login/register\n        alert('You need to be signed in to save a trip');\n        $state.go('register');\n      }\n    // });\n\n  }\n\n  budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.newTrip.expenses + budgetPlanner.newTrip.accomCost - budgetPlanner.newTrip.totalSavings;\n\n  budgetPlanner.createTrip = createTrip;\n  budgetPlanner.getFlights = getFlights;\n}\n","angular.module('travelApp')\n  .service('FlightService', FlightService);\n\nFlightService.$inject = ['$http'];\nfunction FlightService($http) {\n\n  function getPrice(origin, destination, departDate, returnDate) {\n\n    return $http({\n      method: 'GET',\n      url: '/flights',\n      params: {\n        origin,\n        destination,\n        departDate,\n        returnDate\n      }\n    }).then(function successCallback(response) {\n      return response.data;\n    }, function errorCallback(response) {\n      console.log(response);\n    });\n  }\n\n  this.getPrice = getPrice;\n}\n","angular.module('travelApp')\n  .controller('LocationsIndexController', LocationsIndexController);\n\nLocationsIndexController.$inject = ['Location'];\n\nfunction LocationsIndexController(Location) {\n  const locationsIndex = this;\n\n  locationsIndex.all = Location.query();\n  console.log(locationsIndex);\n}\n","angular.module('travelApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('LocationsEditController', LocationsEditController)\n  .controller('LocationsNewController', LocationsNewController);\n\n//////new\nLocationsNewController.$inject = ['Location', '$state'];\n\nfunction LocationsNewController(Location, $state) {\n  const locationsNew = this;\n  locationsNew.location = {};\n\n  function createLocation() {\n    locationsNew.location.images = [locationsNew.location.tempImage.one, locationsNew.location.tempImage.two, locationsNew.location.tempImage.three];\n    Location.save(locationsNew.location, () => {\n      $state.go('login');\n    });\n  }\n  locationsNew.createLocation = createLocation;\n}\n\n//edit\nLocationsEditController.$inject = ['Location', '$state'];\n\nfunction LocationsEditController(location, $state) {\n  const locationsEdit = this;\n  locationsEdit.location = location.get($state.params);\n\n  function update() {\n    location.update({ id: locationsEdit.location._id }, locationsEdit.location, () => {\n      $state.go('login', $state.params);\n\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .controller('LocationsShowController', LocationsShowController);\n\nLocationsShowController.$inject = ['Location', '$state'];\n\nfunction LocationsShowController(Location, $state) {\n  const locationsShow = this;\n\n  locationsShow.location = Location.get($state.params);\n  console.log(locationsShow.location);\n\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$window'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state, $window) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.userId = $window.localStorage.getItem('userId');\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        localStorage.removeItem('userId');\n        $state.go('login');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('travelApp')\n  .factory('Trip', Trip);\n\nTrip.$inject = ['$resource'];\nfunction Trip($resource) {\n  return new $resource('/trips/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .service('TripService', TripService);\n\nTripService.$inject = ['$window'];\nfunction TripService($window) {\n\n  function saveTrip(tripData) {\n    $window.localStorage.setItem('tripData', JSON.stringify(tripData));\n  }\n\n  function getTrip() {\n    return JSON.parse($window.localStorage.getItem('tripData'));\n  }\n\n  function deleteTrip() {\n    return $window.localStorage.removeItem('tripData');\n  }\n\n  this.saveTrip = saveTrip;\n  this.getTrip = getTrip;\n  this.deleteTrip = deleteTrip;\n}\n","angular.module('travelApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('UsersEditController', UsersEditController);\n\nUsersEditController.$inject = ['User', '$state'];\n\nfunction UsersEditController(user, $state) {\n  const usersEdit = this;\n  usersEdit.user = user.get($state.params);\n\n  function update() {\n    user.update({ id: usersEdit.user._id }, usersEdit.user, () => {\n      $state.go('home', $state.params);\n\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .controller('UsersShowController', UsersShowController);\n\nUsersShowController.$inject = ['User', '$state'];\n\nfunction UsersShowController(User, $state) {\n\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n\n  // console.log(userId);\n\n  // console.log(usersShow.user);\n\n}\n"]}