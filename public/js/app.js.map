{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/locations.js","js/controllers/locationsForms.js","js/controllers/main.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","console","log","login","credentials","Location","$resource","id","update","method","LocationsNewController","createLocation","locationsNew","location","images","tempImage","one","two","three","save","LocationsEditController","locationsEdit","_id","params","get","MainController","logout","main","isLoggedIn","isAuthenticated","angular","module","config","$inject","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAYbH,MAAM,gBACLC,IAAK,iBACLC,YAAa,+BACbC,WAAY,2CAEbH,MAAM,iBACLC,IAAK,sBACLC,YAAa,gCACbC,WAAY,6CAShBJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GC/C9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,UAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPQ,QAAQC,IAAI,SACZX,EAAMY,MAAMA,EAAMC,aACfP,KAAK,WACJL,EAAOM,GAAG,UARhB,GAAMK,GAAQJ,IAEdI,GAAMC,eAUND,EAAMV,OAASA,EC/BjB,QAASY,UAASC,GAChB,MAAO,IAAIA,GAAU,kBAAoBC,GAAI,SAC3CC,QAASC,OAAQ,SCCrB,QAASC,wBAAuBL,EAAUb,GAIxC,QAASmB,KACPC,EAAaC,SAASC,QAAUF,EAAaC,SAASE,UAAUC,IAAKJ,EAAaC,SAASE,UAAUE,IAAKL,EAAaC,SAASE,UAAUG,OAC1Ib,EAASc,KAAKP,EAAaC,SAAU,WACnCrB,EAAOM,GAAG,WANd,GAAMc,GAAeb,IACrBa,GAAaC,YAQbD,EAAaD,eAAiBA,EAMhC,QAASS,yBAAwBP,EAAUrB,GAIzC,QAASgB,KACPK,EAASL,QAASD,GAAIc,EAAcR,SAASS,KAAOD,EAAcR,SAAU,WAC1ErB,EAAOM,GAAG,QAASN,EAAO+B,UAL9B,GAAMF,GAAgBtB,IACtBsB,GAAcR,SAAWA,EAASW,IAAIhC,EAAO+B,QAU7CxB,KAAKS,OAASA,EC5BhB,QAASiB,gBAAelC,EAAOC,GAK7B,QAASkC,KACPnC,EAAMmC,SACH7B,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAM6B,GAAO5B,IAEb4B,GAAKC,WAAarC,EAAMsC,gBAuBxBF,EAAKD,OAASA,EJjChBI,QACGC,OAAO,aAAc,aAAc,YAAa,eAChDC,OAAOvD,QACPuD,OAAO/C,MAEVR,OAAOwD,SAAW,iBAAkB,sBA2CpChD,KAAKgD,SAAW,iBChDhBH,QAAQC,OAAO,aACZhD,WAAW,qBAAsBO,oBACjCP,WAAW,kBAAmBiB,iBAGjCV,mBAAmB2C,SAAW,QAAS,UAgBvCjC,gBAAgBiC,SAAW,QAAS,UCrBpCH,QAAQC,OAAO,aACZG,QAAQ,WAAY7B,UAEvBA,SAAS4B,SAAW,aCHpBH,QAAQC,OAAO,aACZhD,WAAW,0BAA2BqC,yBACtCrC,WAAW,yBAA0B2B,wBAGxCA,uBAAuBuB,SAAW,WAAY,UAgB9Cb,wBAAwBa,SAAW,WAAY,UCrB/CH,QAAQC,OAAO,aACZhD,WAAW,iBAAkB0C,gBAEhCA,eAAeQ,SAAW,QAAS","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    // .state('home', {\n    //   url: '/',\n    //   templateUrl: '/templates/home.html',\n    //   controller: 'HomeController as home'\n    // })\n    // .state('locationsShow', {\n    //   url: '/locations/:id',\n    //   templateUrl: '/templates/locationsShow.html',\n    //   controller: 'LocationsShowController as locationsShow'\n    // })\n    .state('locationsNew', {\n      url: '/locations/new',\n      templateUrl: '/templates/locationsNew.html',\n      controller: 'LocationsNewController as locationsNew'\n    })\n    .state('locationsEdit', {\n      url: '/locations/:id/edit',\n      templateUrl: '/templates/locationsEdit.html',\n      controller: 'LocationsEditController as locationsEdit'\n    });\n    // .state('budgetPlanner', {\n    //   url: '/locations/:id/budget',\n    //   templateUrl: '/templates/budgetPlanner.html',\n    //   controller: 'BudgetPlannerController as budgetPlanner'\n    // });\n\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n  // .controller('HomeController', HomeController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    console.log('login');\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('LocationsEditController', LocationsEditController)\n  .controller('LocationsNewController', LocationsNewController);\n\n//////new\nLocationsNewController.$inject = ['Location', '$state'];\n\nfunction LocationsNewController(Location, $state) {\n  const locationsNew = this;\n  locationsNew.location = {};\n\n  function createLocation() {\n    locationsNew.location.images = [locationsNew.location.tempImage.one, locationsNew.location.tempImage.two, locationsNew.location.tempImage.three];\n    Location.save(locationsNew.location, () => {\n      $state.go('login');\n    });\n  }\n  locationsNew.createLocation = createLocation;\n}\n\n//edit\nLocationsEditController.$inject = ['Location', '$state'];\n\nfunction LocationsEditController(location, $state) {\n  const locationsEdit = this;\n  locationsEdit.location = location.get($state.params);\n\n  function update() {\n    location.update({ id: locationsEdit.location._id }, locationsEdit.location, () => {\n      $state.go('login', $state.params);\n\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n"]}