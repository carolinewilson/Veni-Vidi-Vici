{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/budgetPlanner.js","js/models/locations.js","js/controllers/main.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","console","log","login","credentials","BudgetPlannerController","Location","$http","getFlights","budgetPlanner","tempTrip","startDate","budget","startAirport","endAirport","duration","flightCost","totalCost","getPriceFromSkyscanner","requestUrl","method","headers","Access-Control-Allow-Origin","Accept","response","create","expenses","accomCost","accom","totalSavings","location","get","params","$resource","id","update","MainController","logout","main","isLoggedIn","isAuthenticated","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    // .state('home', {\n    //   url: '/',\n    //   templateUrl: '/templates/home.html',\n    //   controller: 'HomeController as home'\n    // })\n    // .state('locationsShow', {\n    //   url: '/locations/:id',\n    //   templateUrl: '/templates/locationsShow.html',\n    //   controller: 'LocationsShowController as locationsShow'\n    // })\n    // .state('locationsNew', {\n    //   url: '/locations/new',\n    //   templateUrl: '/templates/locationsNew.html',\n    //   controller: 'LocationsNewController as locationsNew'\n    // })\n    // .state('locationsEdit', {\n    //   url: '/locations/:id/edit',\n    //   templateUrl: '/templates/locationsEdit.html',\n    //   controller: 'LocationsEditController as locationsEdit'\n    // })\n    .state('budgetPlanner', {\n      url: '/locations/:id/budget',\n      templateUrl: '/templates/budgetPlanner.html',\n      controller: 'BudgetPlannerController as budgetPlanner'\n    });\n\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n  // .controller('HomeController', HomeController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    console.log('login');\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .controller('BudgetPlannerController', BudgetPlannerController);\n\nBudgetPlannerController.$inject= ['Location','$state', '$http'];\nfunction BudgetPlannerController(Location, $state, $http) {\n  const budgetPlanner = this;\n\n  budgetPlanner.location = Location.get($state.params);\n  budgetPlanner.budget = {};\n\n  budgetPlanner.tempTrip = {\n    location: budgetPlanner.location,\n    startDate: '2017-01-01',\n    startAirport: 'LGW',\n    endAirport: 'LAX',\n    duration: 1,\n    accomCost: 0,\n    expenses: 0,\n    totalSavings: 0,\n    totalCost: 0\n  };\n\n  budgetPlanner.budget.startDate = budgetPlanner.tempTrip.startDate;\n  budgetPlanner.budget.startAirport = budgetPlanner.tempTrip.startAirport;\n  budgetPlanner.budget.endAirport = budgetPlanner.tempTrip.endAirport;\n  budgetPlanner.budget.duration = budgetPlanner.tempTrip.duration;\n  budgetPlanner.budget.accomCost = budgetPlanner.tempTrip.accomCost;\n  budgetPlanner.budget.expenses = budgetPlanner.tempTrip.expenses;\n  budgetPlanner.budget.totalSavings = budgetPlanner.tempTrip.totalSavings;\n\n  function getFlights() {\n    budgetPlanner.tempTrip.startDate = budgetPlanner.budget.startDate;\n    budgetPlanner.tempTrip.startAirport = budgetPlanner.budget.startAirport;\n    budgetPlanner.tempTrip.endAirport = budgetPlanner.budget.endAirport;\n    budgetPlanner.tempTrip.duration = budgetPlanner.budget.duration;\n    budgetPlanner.tempTrip.flightCost = 500;\n    budgetPlanner.budget.flightCost = budgetPlanner.tempTrip.flightCost;\n    budgetPlanner.budget.totalCost = budgetPlanner.tempTrip.flightCost;\n    budgetPlanner.tempTrip.totalCost = budgetPlanner.tempTrip.flightCost;\n\n\n    getPriceFromSkyscanner();\n  }\n\n  function getPriceFromSkyscanner() {\n    const requestUrl = `http://partners.api.skyscanner.net/apiservices/browsequotes/v1.0/UK/GBP/en-GB/${budgetPlanner.tempTrip.startAirport}/${budgetPlanner.tempTrip.endAirport}/2017-01-01/2017-01-08?apiKey=da458996433134676343179434984723`;\n\n    $http({\n      method: 'GET',\n      url: requestUrl,\n      headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:8000',\n        'Accept': 'application/json'\n      }\n    }).then(function successCallback(response) {\n      console.log(response);\n    }, function errorCallback(response) {\n      console.log(response);\n    });\n  }\n\n  function create() {\n    budgetPlanner.tempTrip.startDate = budgetPlanner.budget.startDate;\n    budgetPlanner.tempTrip.startAirport = budgetPlanner.budget.startAirport;\n    budgetPlanner.tempTrip.endAirport = budgetPlanner.budget.endAirport;\n    budgetPlanner.tempTrip.duration = budgetPlanner.budget.duration;\n    budgetPlanner.tempTrip.flightCost = budgetPlanner.budget.flightCost;\n    budgetPlanner.tempTrip.expenses = budgetPlanner.budget.expenses;\n    budgetPlanner.tempTrip.accomCost = budgetPlanner.budget.accom;\n    budgetPlanner.tempTrip.totalSavings = budgetPlanner.budget.totalSavings;\n\n    budgetPlanner.tempTrip.totalCost = budgetPlanner.tempTrip.flightCost + (budgetPlanner.budget.expenses * budgetPlanner.budget.duration) + budgetPlanner.budget.accom - budgetPlanner.budget.totalSavings;\n\n    console.log(budgetPlanner.tempTrip);\n\n  }\n\n\n  budgetPlanner.budget.totalCost = budgetPlanner.tempTrip.flightCost + budgetPlanner.budget.expenses + budgetPlanner.budget.accom;\n\n  budgetPlanner.create = create;\n  budgetPlanner.getFlights = getFlights;\n\n  console.log(budgetPlanner.budget);\n}\n","angular.module('travelApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n"]}