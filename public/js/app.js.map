{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","logout","main","isLoggedIn","isAuthenticated","angular","module","config","$inject"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EAqBGE,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAIhBJ,EAAmBK,UAAU,UAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GC3C9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,gBAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACfL,KAAK,WACJL,EAAOM,GAAG,gBAPhB,GAAMG,GAAQF,IAEdE,GAAMC,eASND,EAAMR,OAASA,EC1BjB,QAASU,gBAAeZ,EAAOC,GAK7B,QAASY,KACPb,EAAMa,SACHP,KAAK,WACJL,EAAOM,GAAG,gBAPhB,GAAMO,GAAON,IAEbM,GAAKC,WAAaf,EAAMgB,gBAuBxBF,EAAKD,OAASA,EFjChBI,QACGC,OAAO,aAAc,aAAc,YAAa,eAChDC,OAAOjC,QACPiC,OAAOzB,MAEVR,OAAOkC,SAAW,iBAAkB,sBAsCpC1B,KAAK0B,SAAW,iBC3ChBH,QAAQC,OAAO,aACZ1B,WAAW,qBAAsBO,oBACjCP,WAAW,kBAAmBiB,iBAEjCV,mBAAmBqB,SAAW,QAAS,UAgBvCX,gBAAgBW,SAAW,QAAS,UCpBpCH,QAAQC,OAAO,aACZ1B,WAAW,iBAAkBoB,gBAEhCA,eAAeQ,SAAW,QAAS","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    // .state('filmsIndex', {\n    //   url: '/films',\n    //   templateUrl: '/templates/filmsIndex.html',\n    //   controller: 'FilmsIndexController as filmsIndex'\n    // })\n    // .state('filmsNew', {\n    //   url: '/films/new',\n    //   templateUrl: '/templates/filmsNew.html',\n    //   controller: 'FilmsNewController as filmsNew'\n    // })\n    // .state('filmsShow', {\n    //   url: '/films/:id',\n    //   templateUrl: 'templates/filmsShow.html',\n    //   controller: 'FilmsShowController as filmsShow'\n    // })\n    // .state('filmsEdit', {\n    //   url: '/films/:id/edit',\n    //   templateUrl: '/templates/filmsEdit.html',\n    //   controller: 'FilmsEditController as filmsEdit'\n    // })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n\n  $urlRouterProvider.otherwise('/trips');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('tripsIndex');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('tripsIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('tripsIndex');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n"]}