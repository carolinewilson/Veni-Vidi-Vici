{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/budgetPlanner.js","js/services/flightService.js","js/controllers/locations.js","js/models/locations.js","js/controllers/locationsForms.js","js/controllers/locationsShow.js","js/controllers/main.js","js/models/trips.js","js/services/tripService.js","js/models/users.js","js/controllers/usersEdit.js","js/controllers/usersShow.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","$window","User","TripService","Trip","submit","signup","register","user","then","res","localStorage","setItem","data","token","payload","getPayload","_id","tripData","getTrip","save","console","log","go","this","LoginController","login","credentials","BudgetPlannerController","Location","FlightService","getFlights","budgetPlanner","newTrip","flightCost","tripDuration","parseFloat","duration","returnDate","moment","departDate","add","format","createTrip","totalCost","expenses","accomCost","totalSavings","location","loggedIn","isLoggedIn","getItem","saveTrip","alert","isAuthenticated","get","params","origin","destination","closestAirport","destAirportCode","airportCode","$http","getPrice","method","response","LocationsIndexController","locationsIndex","all","query","$resource","id","update","LocationsNewController","createLocation","locationsNew","images","tempImage","one","two","three","LocationsEditController","locationsEdit","LocationsShowController","locationsShow","MainController","logout","removeItem","deleteTrip","main","userId","JSON","stringify","parse","UsersEditController","usersEdit","UsersShowController","usersShow","angular","module","config","$inject","$","document","ready","on","e","toggleClass","preventDefault","service","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('travelApp', ['ngResource', 'ui.router', 'satellizer','ngMaterial'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider){\n  $stateProvider\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('locationsNew', {\n      url: '/locations/new',\n      templateUrl: '/templates/locationsNew.html',\n      controller: 'LocationsNewController as locationsNew'\n    })\n    .state('locationsEdit', {\n      url: '/locations/:id/edit',\n      templateUrl: '/templates/locationsEdit.html',\n      controller: 'LocationsEditController as locationsEdit'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'LocationsIndexController as locationsIndex'\n    })\n    .state('locationsShow', {\n      url: '/locations/:id',\n      templateUrl: '/templates/locationsShow.html',\n      controller: 'LocationsShowController as locationsShow'\n    })\n    .state('budgetPlanner', {\n      url: '/locations/:id/budget',\n      templateUrl: '/templates/budgetPlanner.html',\n      controller: 'BudgetPlannerController as budgetPlanner'\n    }) /////////user state\n    .state('usersShow', {\n      url: '/users/:id/show',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    ;\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider){\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n// menu\n$(document).ready(function(){\n  $('.sliding-panel-button,.sliding-panel-fade-screen,.sliding-panel-close').on('click touchstart',function (e) {\n    $('.sliding-panel-content,.sliding-panel-fade-screen').toggleClass('is-visible');\n    e.preventDefault();\n  });\n});\n","angular.module('travelApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window', 'User','TripService','Trip'];\nfunction RegisterController($auth, $state, $window, User, TripService, Trip) {\n\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth\n      .signup(register.user)\n      .then((res) => {\n\n        $window.localStorage.setItem('token', res.data.token);\n        const payload = $auth.getPayload();\n        $window.localStorage.setItem('userId', payload._id);\n\n        const tripData = TripService.getTrip();\n\n        if (tripData) {\n          tripData.user = res.data.user._id;\n          Trip.save(tripData, (res) => {\n            console.log('saved trip! ', res);\n            $state.go('usersShow');\n          });\n        }\n\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state', '$window','TripService', 'Trip'];\nfunction LoginController($auth, $state, $window, TripService, Trip) {\n\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth\n      .login(login.credentials)\n      .then((data) => {\n        const payload = $auth.getPayload();\n        $window.localStorage.setItem('userId', payload._id);\n\n        const tripData = TripService.getTrip();\n        tripData.user = data.data.user._id;\n\n        if (tripData) {\n          Trip.save(tripData, (res) => {\n            console.log('saved trip! ', res);\n            $state.go('usersShow');\n          });\n        }\n\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('travelApp')\n  .controller('BudgetPlannerController', BudgetPlannerController);\n\nBudgetPlannerController.$inject= ['Location','Trip','$state', 'FlightService', '$auth', 'TripService', '$window'];\nfunction BudgetPlannerController(Location, Trip, $state, FlightService, $auth, TripService, $window) {\n  const budgetPlanner = this;\n\n  budgetPlanner.isLoggedIn = $auth.isAuthenticated;\n  budgetPlanner.newTrip = {};\n  budgetPlanner.location = Location.get($state.params);\n\n  Location.get($state.params, (location) => {\n    budgetPlanner.newTrip = {\n      origin: 'LGW',\n      destination: location.closestAirport,\n      destAirportCode: location.airportCode,\n      duration: 7,\n      flightCost: 0,\n      accomCost: 0,\n      expenses: 0,\n      totalSavings: 0,\n      totalCost: 0\n    };\n  });\n\n\n  function getFlights() {\n\n    budgetPlanner.newTrip.flightCost = 500;\n\n    // add duration to start date to get end date\n    const tripDuration = parseFloat(budgetPlanner.newTrip.duration);\n\n    budgetPlanner.newTrip.returnDate = moment(budgetPlanner.newTrip.departDate).add(tripDuration, 'days').format('YYYY-MM-DD');\n    console.log(budgetPlanner.newTrip.returnDate);\n\n    // if no results, add 7 days to start date and end date\n\n    // FlightService\n    //   .getPrice(budgetPlanner.newTrip.origin, budgetPlanner.newTrip.destAirportCode, budgetPlanner.newTrip.departDate, budgetPlanner.newTrip.returnDate)\n    //   .then(\n    //     (successResponse) => {\n    //       console.log(successResponse);\n    //       if (successResponse.totalPrice === 0) {\n    //         console.log('no results found');\n    //\n    //         // Re-run search with different date if no flights found\n    //\n    //\n    //       // If flights found, update newTrip with price\n    //       } else {\n    //         console.log('flights found!');\n    //         console.log(successResponse);\n    //         budgetPlanner.newTrip.flightCost = successResponse.totalPrice;\n    //       }\n    //     },\n    //     errorResponse => {\n    //       console.log('Could not retrieve price:', errorResponse);\n    //     }\n    // );\n  }\n\n  function createTrip() {\n    // Calculate total cost\n    budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.newTrip.expenses + budgetPlanner.newTrip.accomCost - budgetPlanner.newTrip.totalSavings;\n\n    // Get the location id\n    console.log(budgetPlanner.location);\n    budgetPlanner.newTrip.location = budgetPlanner.location._id;\n\n    console.log(budgetPlanner.newTrip);\n\n    // Check if user is logged in\n    const loggedIn = budgetPlanner.isLoggedIn();\n\n    if (loggedIn) {\n      budgetPlanner.newTrip.user = $window.localStorage.getItem('userId');\n      Trip.save(budgetPlanner.newTrip, (data) => {\n        console.log('saved ', data);\n      });\n    } else {\n      // if user isn't logged in, add trip id to local storage\n      TripService.saveTrip(budgetPlanner.newTrip);\n\n      alert('You need to be signed in to save a trip');\n\n      // get them to sign in, then add reference to user id to trip (id from local storage)\n      $state.go('register');\n    }\n  }\n\n  budgetPlanner.newTrip.totalCost = budgetPlanner.newTrip.flightCost + budgetPlanner.newTrip.expenses + budgetPlanner.newTrip.accomCost - budgetPlanner.newTrip.totalSavings;\n\n  budgetPlanner.createTrip = createTrip;\n  budgetPlanner.getFlights = getFlights;\n}\n","angular.module('travelApp')\n  .service('FlightService', FlightService);\n\nFlightService.$inject = ['$http'];\nfunction FlightService($http) {\n\n  function getPrice(origin, destination, departDate, returnDate) {\n\n    return $http({\n      method: 'GET',\n      url: '/flights',\n      params: {\n        origin,\n        destination,\n        departDate,\n        returnDate\n      }\n    }).then(function successCallback(response) {\n      return response.data;\n    }, function errorCallback(response) {\n      console.log(response);\n    });\n  }\n\n  this.getPrice = getPrice;\n}\n","angular.module('travelApp')\n  .controller('LocationsIndexController', LocationsIndexController);\n\nLocationsIndexController.$inject = ['Location'];\n\nfunction LocationsIndexController(Location) {\n  const locationsIndex = this;\n\n  locationsIndex.all = Location.query();\n  console.log(locationsIndex);\n}\n","angular.module('travelApp')\n  .factory('Location', Location);\n\nLocation.$inject = ['$resource'];\nfunction Location($resource) {\n  return new $resource('/locations/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('LocationsEditController', LocationsEditController)\n  .controller('LocationsNewController', LocationsNewController);\n\n//////new\nLocationsNewController.$inject = ['Location', '$state'];\n\nfunction LocationsNewController(Location, $state) {\n  const locationsNew = this;\n  locationsNew.location = {};\n\n  function createLocation() {\n    locationsNew.location.images = [locationsNew.location.tempImage.one, locationsNew.location.tempImage.two, locationsNew.location.tempImage.three];\n    Location.save(locationsNew.location, () => {\n      $state.go('login');\n    });\n  }\n  locationsNew.createLocation = createLocation;\n}\n\n//edit\nLocationsEditController.$inject = ['Location', '$state'];\n\nfunction LocationsEditController(location, $state) {\n  const locationsEdit = this;\n  locationsEdit.location = location.get($state.params);\n\n  function update() {\n    location.update({ id: locationsEdit.location._id }, locationsEdit.location, () => {\n      $state.go('login', $state.params);\n\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .controller('LocationsShowController', LocationsShowController);\n\nLocationsShowController.$inject = ['Location', '$state'];\n\nfunction LocationsShowController(Location, $state) {\n  const locationsShow = this;\n\n  locationsShow.location = Location.get($state.params);\n  console.log(locationsShow.location);\n\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$window', 'TripService'];\n//MainController.$inject = ['$auth', '$state', '$rootScope'];\n//function MainController($auth, $state, $rootScope) {\n\nfunction MainController($auth, $state, $window, TripService) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.userId = $window.localStorage.getItem('userId');\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        localStorage.removeItem('userId');\n        TripService.deleteTrip();\n        $state.go('login');\n      });\n  }\n\n  // main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n  //\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('travelApp')\n  .factory('Trip', Trip);\n\nTrip.$inject = ['$resource'];\nfunction Trip($resource) {\n  return new $resource('/trips/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .service('TripService', TripService);\n\nTripService.$inject = ['$window'];\nfunction TripService($window) {\n\n  function saveTrip(tripData) {\n    $window.localStorage.setItem('tripData', JSON.stringify(tripData));\n  }\n\n  function getTrip() {\n    return JSON.parse($window.localStorage.getItem('tripData'));\n  }\n\n  function deleteTrip() {\n    return $window.localStorage.removeItem('tripData');\n  }\n\n  this.saveTrip = saveTrip;\n  this.getTrip = getTrip;\n  this.deleteTrip = deleteTrip;\n}\n","angular.module('travelApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: {method: 'PUT'}\n  });\n}\n","angular.module('travelApp')\n  .controller('UsersEditController', UsersEditController);\n\nUsersEditController.$inject = ['User', '$state'];\n\nfunction UsersEditController(user, $state) {\n  const usersEdit = this;\n  usersEdit.user = user.get($state.params);\n\n  function update() {\n    user.update({ id: usersEdit.user._id }, usersEdit.user, () => {\n      $state.go('home', $state.params);\n\n\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('travelApp')\n  .controller('UsersShowController', UsersShowController);\n\nUsersShowController.$inject = ['User', '$state'];\n\nfunction UsersShowController(User, $state) {\n\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n\n  // console.log(userId);\n\n  // console.log(usersShow.user);\n\n}\n"]}