"use strict";function Router(t,e){t.state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("locationsNew",{url:"/locations/new",templateUrl:"/templates/locationsNew.html",controller:"LocationsNewController as locationsNew"}).state("locationsEdit",{url:"/locations/:id/edit",templateUrl:"/templates/locationsEdit.html",controller:"LocationsEditController as locationsEdit"}).state("home",{url:"/",templateUrl:"/templates/home.html",controller:"LocationsIndexController as locationsIndex"}).state("locationsShow",{url:"/locations/:id",templateUrl:"/templates/locationsShow.html",controller:"LocationsShowController as locationsShow"}).state("budgetPlanner",{url:"/locations/:id/budget",templateUrl:"/templates/budgetPlanner.html",controller:"BudgetPlannerController as budgetPlanner"}).state("budgetTracker",{url:"/trips/:id",templateUrl:"/templates/budgetTracker.html",controller:"BudgetTrackerController as budgetTracker"}).state("usersShow",{url:"/users/:id/show",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}),e.otherwise("/")}function Auth(t){t.loginUrl="/login",t.signupUrl="/register",t.tokenPrefix=""}function RegisterController(t,e,o,r,n,i){function l(){t.signup(a.user).then(function(r){o.localStorage.setItem("token",r.data.token);var l=t.getPayload();o.localStorage.setItem("userId",l._id);var a=n.getTrip();return a?(a.user=r.data.user._id,i.save(a,function(t){console.log("saved trip! ",t)}),e.go("usersShow",{id:r.data.user._id})):void e.go("home")})}var a=this;a.user={},a.submit=l}function LoginController(t,e,o,r,n){function i(){t.login(l.credentials).then(function(i){var l=t.getPayload();o.localStorage.setItem("userId",l._id);var a=r.getTrip();return a?(a.user=i.data.user._id,n.save(a,function(t){console.log("saved trip! ",t)}),e.go("usersShow",{id:i.data.user._id})):void e.go("home")})}var l=this;l.credentials={},l.submit=i}function BudgetPlannerController(t,e,o,r,n,i,l){function a(){c.newTrip.flightCost=500;var t=parseFloat(c.newTrip.duration);c.newTrip.returnDate=moment(c.newTrip.departDate).add(t,"days").format("YYYY-MM-DD"),console.log(c.newTrip.returnDate)}function s(){c.newTrip.totalCost=c.newTrip.flightCost+c.newTrip.expenses+c.newTrip.accomCost-c.newTrip.totalSavings,console.log(c.location),c.newTrip.location=c.location._id,console.log(c.newTrip);var t=c.isLoggedIn();t?(c.newTrip.user=l.localStorage.getItem("userId"),e.save(c.newTrip,function(t){console.log("saved ",t),o.go("budgetTracker",{id:t._id})})):(i.saveTrip(c.newTrip),alert("You need to be signed in to save a trip"),o.go("register"))}var c=this;c.isLoggedIn=n.isAuthenticated,c.newTrip={},c.location=t.get(o.params),t.get(o.params,function(t){c.newTrip={origin:"LGW",destination:t.closestAirport,destAirportCode:t.airportCode,duration:7,flightCost:0,accomCost:0,expenses:0,totalSavings:0,totalCost:0}}),c.newTrip.totalCost=c.newTrip.flightCost+c.newTrip.expenses+c.newTrip.accomCost-c.newTrip.totalSavings,c.createTrip=s,c.getFlights=a}function BudgetTrackerController(t,e){function o(){return n.pcSaved=n.trip.totalSavings/(n.trip.flightCost+n.trip.expenses+n.trip.accomCost)*100,Math.ceil(n.pcSaved)}function r(){n.trip.$update(function(t){console.log("trip saved!",t)})}var n=this;n.trip=t.get(e.params),n.pcSaved=n.trip.totalSavings/(n.trip.flightCost+n.trip.expenses+n.trip.accomCost)*100,n.save=r,n.calcPcSaved=o}function FlightService(t){function e(e,o,r,n){return t({method:"GET",url:"/flights",params:{origin:e,destination:o,departDate:r,returnDate:n}}).then(function(t){return t.data},function(t){console.log(t)})}this.getPrice=e}function inputRevealer(){return{restrict:"E",replace:!0,templateUrl:"templates/inputRevealer.html",scope:{type:"@",name:"@",ngModel:"=",onSubmit:"&"},link:function(t,e){e.on("click",function(){t.isEditing||(t.isEditing=!0),t.$apply()}).on("keyup",function(e){13===e.keyCode&&(t.onSubmit(),t.isEditing=!1,t.$apply())})}}}function LocationsIndexController(t){var e=this;e.all=t.query(),console.log(e)}function Location(t){return new t("/locations/:id",{id:"@_id"},{update:{method:"PUT"}})}function LocationsNewController(t,e){function o(){r.location.images=[r.location.tempImage.one,r.location.tempImage.two,r.location.tempImage.three],t.save(r.location,function(){e.go("login")})}var r=this;r.location={},r.createLocation=o}function LocationsEditController(t,e){function o(){t.update({id:r.location._id},r.location,function(){e.go("login",e.params)})}var r=this;r.location=t.get(e.params),this.update=o}function LocationsShowController(t,e){var o=this;o.location=t.get(e.params),console.log(o.location)}function MainController(t,e,o,r){function n(){t.logout().then(function(){localStorage.removeItem("userId"),r.deleteTrip(),e.go("login")})}var i=this;i.isLoggedIn=t.isAuthenticated,i.userId=o.localStorage.getItem("userId"),i.logout=n}function Trip(t){return new t("/trips/:id",{id:"@_id"},{update:{method:"PUT"}})}function TripService(t){function e(e){t.localStorage.setItem("tripData",JSON.stringify(e))}function o(){return JSON.parse(t.localStorage.getItem("tripData"))}function r(){return t.localStorage.removeItem("tripData")}this.saveTrip=e,this.getTrip=o,this.deleteTrip=r}function User(t){return new t("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UsersEditController(t,e){function o(){t.update({id:r.user._id},r.user,function(){e.go("home",e.params)})}var r=this;r.user=t.get(e.params),this.update=o}function UsersShowController(t,e){var o=this;o.user=t.get(e.params)}angular.module("travelApp",["ngResource","ui.router","satellizer","ngMaterial"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("travelApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state","$window","User","TripService","Trip"],LoginController.$inject=["$auth","$state","$window","TripService","Trip"],angular.module("travelApp").controller("BudgetPlannerController",BudgetPlannerController),BudgetPlannerController.$inject=["Location","Trip","$state","FlightService","$auth","TripService","$window"],angular.module("travelApp").controller("BudgetTrackerController",BudgetTrackerController),BudgetTrackerController.$inject=["Trip","$state"],angular.module("travelApp").service("FlightService",FlightService),FlightService.$inject=["$http"],angular.module("travelApp").directive("inputRevealer",inputRevealer),angular.module("travelApp").controller("LocationsIndexController",LocationsIndexController),LocationsIndexController.$inject=["Location"],angular.module("travelApp").factory("Location",Location),Location.$inject=["$resource"],angular.module("travelApp").controller("LocationsEditController",LocationsEditController).controller("LocationsNewController",LocationsNewController),LocationsNewController.$inject=["Location","$state"],LocationsEditController.$inject=["Location","$state"],angular.module("travelApp").controller("LocationsShowController",LocationsShowController),LocationsShowController.$inject=["Location","$state"],angular.module("travelApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$window","TripService"],angular.module("travelApp").factory("Trip",Trip),Trip.$inject=["$resource"],angular.module("travelApp").service("TripService",TripService),TripService.$inject=["$window"],angular.module("travelApp").factory("User",User),User.$inject=["$resource"],angular.module("travelApp").controller("UsersEditController",UsersEditController),UsersEditController.$inject=["User","$state"],angular.module("travelApp").controller("UsersShowController",UsersShowController),UsersShowController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
